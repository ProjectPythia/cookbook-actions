name: link-checker

on:
  workflow_call:
    inputs:
      environment_name:  # Ignored! Just here for backwards compatibility
        description: 'Name of conda environment to activate'
        required: false
        default: 'cookbook-dev'
        type: string
      environment_file:  # Ignored! Just here for backwards compatibility
        description: 'Name of conda environment file'
        required: false
        default: 'environment.yml'
        type: string
      path_to_notebooks:
        description: 'Location of the JupyterBook source relative to repo root'
        required: false
        default: './'
        type: string
      use_cached_environment:  # Ignored! Just here for backwards compatibility
        description: 'Flag for whether we should attempt to retrieve a previously cached environment.'
        required: false
        default: 'true'
        type: string
      build_command:
        description: 'The linux command to run the link checker for the book or site'
        required: false
        default: 'jupyter-book build --builder linkcheck .'
        type: string


concurrency:
  group: ${{ github.workflow }}=${{ github.head_ref}}
  cancel-in-progress: true

jobs:
  link-checker:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest

      - name: Install Jupyterbook
        run: conda install -c conda-forge jupyter-book "python<3.13"  # see https://github.com/ProjectPythia/cookbook-actions/issues/126

      - name: Check for config file
        id: check_config
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ inputs.path_to_notebooks }}/_config.yml"

      - name: Disable notebook execution
        if: steps.check_config.outputs.files_exists == 'true'
        shell: python
        run: |
          import yaml
          with open('${{ inputs.path_to_notebooks }}/_config.yml') as f:
            data = yaml.safe_load(f)
          data['execute']['execute_notebooks'] = 'off'
          with open('${{ inputs.path_to_notebooks }}/_config.yml', 'w') as f:
            yaml.dump(data, f)

      - name: Check external links
        run: |
          cd ${{ inputs.path_to_notebooks }}
          ${{ inputs.build_command }}
